#include <iostream>
#include <vector>

using namespace std;
void findNthRoot(string y) {
    size_t position = y.find("rt:");
	if (position != string::npos)
	{
		size_t length = 1;
		size_t n = position - 1;
		while (n > 0 && isdigit(y[n - 1])) {
			--n;
			++length;
		}
		string str1 = y.substr(n, length);
        
		length = 1;
		size_t x = position + 3;
        if(y.at(x) == '(') {
            int otherPar1 = y.find(')');
            int otherPar2 = y.find('(');
            int otherPar = otherPar1 - otherPar2 - 1;
            string str3 = y.substr(x+1, otherPar); 
            cout << str3;
        }
        else {
		    while (x < y.size() - 1 && isdigit(y[x + length]))
			    ++length;
		    string str2 = y.substr(x, length);
		    int a = stoi(str1);
		    int b = stoi(str2);
            cout << "a: " << a << "\n" << "b: " << b;
		    nthRootToExponent(a, b);
        }
	}
}
int main()
{
   findNthRoot("1+3-22rt:1");
   
   return 0;
}
